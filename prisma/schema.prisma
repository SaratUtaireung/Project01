// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  fname    String
  lname    String
  email    String     @unique
  password String
  address  String
  phone    Int
  shippings Shipping[]
  carts     Cart[]
  orders    Order[]
}

model Product {
  id            Int         @id @default(autoincrement())
  productName   String
  description   String?
  price         Float
  stockQuantity Int
  orderItems     OrderItem[]
  carts          Cart[]
}

model Order {
  id          Int         @id @default(autoincrement())
  userId      Int
  orderDate   DateTime
  totalAmount Float
  user        User        @relation(fields: [userId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  orderItems   OrderItem[]
  shippings    Shipping[]
  payments     Payment[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  detail    String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Cart {
  id        Int     @id @default(autoincrement())
  userId    Int
  productId Int
  detail    String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Shipping {
  id            Int    @id @default(autoincrement())
  orderId       Int
  recipientName String
  address       String
  phone         Int
  user          User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId        Int
  oeder         Order  @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Payment {
  id            Int      @id @default(autoincrement())
  orderId       Int
  paymentMethod String
  amount        String
  paymentData   DateTime
  order         Order    @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
